{"version":3,"sources":["pages/Projects/index.js"],"names":["Projects"],"mappings":"iGAAA,wBAmGeA,UA1FE,WAyCf,OACE","file":"static/js/14.87b40090.chunk.js","sourcesContent":["// import AppBar from \"@material-ui/core/AppBar\";\r\n// import Page from \"material-ui-shell/lib/containers/Page\";\r\nimport React from \"react\";\r\n// import Tab from \"@material-ui/core/Tab\";\r\n// import Tabs from \"@material-ui/core/Tabs\";\r\n// import { useIntl } from \"react-intl\";\r\n// import UserPlotly from \"graphs/UserPlotly\";\r\n// import Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nconst Projects = () => {\r\n  //   const [tab, setTab] = useState(40);\r\n  //   const [userProjects, setUserProjects] = useState([]);\r\n  //   const intl = useIntl();\r\n\r\n  // useEffect(() => {\r\n  //   fetch(\"http://127.0.0.1:3000/projects/\")\r\n  //     .then(response => response.json())\r\n  //     .then(userProj => setUserProjects(userProj))\r\n  //     .then(() => {\r\n  //       if (!userProjects.length) {\r\n  //         console.error(\"no user project length\");\r\n  //       } else {\r\n  //         setTab(userProjects[0][\"id\"]);\r\n  //       }\r\n  //     });\r\n  // }, [userProjects]);\r\n\r\n  // const renderUserProjects = () => {\r\n  //   if (!userProjects.length) {\r\n  //     console.error(\"no user project length\");\r\n  //   } else {\r\n  //     const foundProjects = userProjects.filter(project => project.id === tab);\r\n  //     return foundProjects.map(proj => {\r\n  //       proj.graphs.reverse();\r\n  //       return proj.graphs.map(graph => {\r\n  //         return (\r\n  //           <UserPlotly\r\n  //             xAxis={graph[\"x_axis_array\"].split(\",\")}\r\n  //             projectionLower={graph[\"proj_low_array\"].split(\",\")}\r\n  //             projection={graph[\"proj_array\"].split(\",\")}\r\n  //             projectionUpper={graph[\"proj_high_array\"].split(\",\")}\r\n  //             stockSym={graph[\"stock_sym\"]}\r\n  //             globalQuote={{}}\r\n  //           />\r\n  //         );\r\n  //       });\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      {/* <Page\r\n      pageTitle={intl.formatMessage({\r\n        id: \"tabs_demo\",\r\n        defaultMessage: \"Existing Cast Projects\",\r\n      })}\r\n      tabs={\r\n        <AppBar position='static'>\r\n          <Tabs\r\n            value={tab}\r\n            variant='scrollable'\r\n            scrollButtons='auto'\r\n            aria-label='scrollable auto tabs example'\r\n            centered\r\n          >\r\n            {userProjects.length ? (\r\n              userProjects.map(project => {\r\n                console.log(project);\r\n                return (\r\n                  <Tooltip\r\n                    title={project.description}\r\n                    aria-label={project.description}\r\n                  >\r\n                    <Tab\r\n                      onClick={() => setTab(project.id)}\r\n                      label={project.name}\r\n                      value={project.id}\r\n                    />\r\n                  </Tooltip>\r\n                );\r\n              })\r\n            ) : (\r\n              <Tab label='Create New Project' value='A' />\r\n            )}\r\n          </Tabs>\r\n        </AppBar>\r\n      }\r\n    >\r\n      <div>\r\n        {renderUserProjects()}\r\n        {userProjects.length ? null : ( // userProjects.filter(project => tab === project.id)\r\n          <div>\"Create new Project\"</div>\r\n        )}\r\n      </div>\r\n    </Page> */}\r\n    </>\r\n  );\r\n};\r\nexport default Projects;\r\n"],"sourceRoot":""}